ზოგადად გვაქვს ინფორმაციის მიმოცვლის 2 პროტოკოლი TCP და UDP, ასევე OSI მოდელი მაგრამ ამჟამად ის უმეტესწილად ჩანაცვლებულია TCP მოდელით, UDP არ აქვს
რაიმე რთული მექანიზმი,ამიტომაც ის სისწრაფეს თუმცა დაბალ ხარისხს და ნაკლებს უსაფრთხოებას გვაძლევს ინფორმაციის გაგზავნისას, მაშინ როდესაც TCP აქვს შესაბამისი
მექანიზმი და ის გვაძლევს შედარებით შენელებულ თუმცა უსაფრთხო და სრულყოფილ მიმოცვლას, ამიტომაც არჩევანი უნდა გაკეთდეს სისრაფეს და ხარისხს შორის.

TCP/Ip მოდელი საკვანძო ფუნდამენტია networking-ში, კერძოდ ინფორმაციის მიმოცვლა ხდება ამ პროტოკოლის შესაბამისად რომელიც რამდენიმე ლეიერადაა დაყოფილი
კერძოდ:რექვესთის დაწყებამდე გვაქვს Three-way handshake პროცესი იმისთვის რომ დამყარდეს connection,sender უგზავნის syn ანუ შეტყობინებას რომ სურს ინფორმაციის
და აპირებს, receiver უდასტურებს syn+ackno სიგნალით რომ მიიღო შეტყობინება და მზადაა ინფორმაციის მისაღებად და ბოლოს sender აგზავნის ackn სიგნალს რომ
მანაც მიიღო დასტური და მზადაა ინფორმაციის გასაგზავნად. ამის შემდეგ უკვე უშუალოდ ინფორმაციის გაგზავნის პროცესი იწყება.კერძოდ მთლიანი დეიტა იყოფა სეგმენტებად
თოთოეული სეგმენტი გადის შესაბამის ლეიერებს და ასევე თითოეული სეგმენტი შეიცავს TCP HEADER სადაც მოცემულია ინფორმაცის გაგზავნილი სეგმენტის შესახებ. განვიხილოთ
ჰედერის თოთოეული კომპონენტი:
1.Source Port - გამგზავნის პორტი, ანუ საიდანაც იგზავნება რექვესთი;
2.Destination Port - მიმღების პორტი, ანუ მისამართი სადაც ვაგზავნით რექვესთს;
3. Sequence Number - განსაზღვრავს თანმიმდევრობას, ანუ რომელი სეგმენტი რომელი სეგმენტსი შემდეგ უნდა იყოს, როდესაც გაიგზავნება სეგმენტი მიმღები მხარე შეამოწმებს
   უნდა იყოს თუ არა ეს სეგმენტი ამ ადგილას. მიღებულ შედეგს მიმღები მხარე უგზავნის უკან, თუ წარმატებულია ეს იქნება შემდეგი სეგმენტის ნომერი ხოლო თუ წარუმატებელია 
   იქნება შეტყობინება რომ თანმიმდევრობა არეულია და შეგდეგ გაგზავნებში გასწორდეს ეს შეცდომა, ეს მაჩვენებელი არის სწორედ Acknowledgement number
4.Acknowledgement Number - receiver -სგან მოსულ TCP Header-ში გვაქვს შესაბამისი ველი,გამგზავნის ველში ეს მონაცემი ცარიელია,ამ გზით მიმღები ატყობინებს
  გამგზავნს თუ რამდენად სწორი თანმიმდევრობით იგზავნება სეგმენტები,თუ სწორადაა მიღებული ეგზავნება შემდეგი სეგმენტის sequence number,თუ თანმიმდევრობა 
  არასწორადაამაშინ ეს იქნება სავარაუდოდ გამორჩენილი სეგმენტი.ანუ მაჩვენებლით რეგულირდება თანმიმდევრობა სეგმენტების.
5.Data Offset - განსაზღვრავს მთლიანდად Tcp header-ის სიგრძეს,ზომას, ანუ რა მაჩვენებელიც იქნება მოცემული ამ ადგილას ის უნდა გამრავლდეს 4-ზე.
6.Flags - 1.URG (Urgent) - მანიშნებელია იმის რომ ველი - Urgent Pointer არის მნიშვნელოვანი, ანუ გაგზავნილ დეითაში არის განსაკუთრებტ მნიშვენლოვანი მონაკვეთი,
            რომელიც მიმღებისგან განსაკუთრებულ ყურადღებას, ან სწრაფად რეაგირებას მოითხოვს.
          2.ACK (Acknowledgement)-მიანიშნებს რომ Acknowledgement number არის მნიშვნელოვანი და სეგმენტის ნომერი ესაა წინაზე მიღებული Acknowledgement number 
          3.PSH (Push) - აღმნიშვნელია იმის რომ მიმღებმა რაც შეიძლება სწრაფად უნდა ჩასვას მიღებული დეითა აპლიკაციაში.
          4.RST(Reset) - აღნიშნავს რომ connection ის დარესეთება უნდა მოხდეს.
          5.SYN(Synchronize) - ესაა Three-way handshake-ის ნაწილი, პირველ "სეგმენტში" (რეალურად ეს არაა სეგმენტი რადგან მასში დეითა არაა გატანებული)
            აღნიშნავს რომ უნდა მოხდეს connecetion establishment.
          6.Fin (Finalize) - ისევე როგორც SIn ფლეგი გამოიოყენება ნოტიფიკაციისთვის რომ გამგზავნმა დაასრულა ინფორმაციის გაგზავნა და connection უნდა დასრულდეს.
                ამ შემთხვევაშიც სეგმენტი იქნება მოჩვენებითი რადგან აქაც არ ხდება რეალური დეითას გატანება.
7.Window Size - როგორც ვიცით გამგზავნი მხარე მოელის მიმღებისგან დადსურებას რომ მიიღო მანდ ეს დეითა და ეს ყველაფერი ხორციეკლდება Acknowledgement number
  საშუალებით, ხოლო ეს ველი აღნიშნავს იმ ინფორმაციის მოცულობას რაც შეიძლება ამ დადსტურების გარეშე მიეწოდოს მიმღებს. ეს ველი დინამიურია, ანუ შეიძლება გაიზარდოს
  ან პირიქით შემცირდეს.
8.Checksum - tcp header-ის ერთ-ერთი კომპონენტი რომელიც შედგება DATA and Pseudo code სგან , ამოწმებს რამდენად სრულყოფილადაა გადაცემული თოთეული სეგმენტი
  კერძოდ ადარებს გამგზავნის დე მიმღების checksum თუ ემთხვევა ისნი ესეიგი სრულყოფილია იმნფორმაცია.
9.Urgent Pointer - urg flag-ს დახმარებით ის ატყობინებს მიმღებს რომ ეს ინფორმაცია განსაკუთრებით მნიშვნელოვანია და განსაკუთრებულ და სწრაფ ყურადღებას საჭიროებს,
  ის აღმნიშვნელია ამ ინფორმაციის ბოლო ბიტის ადგილისა გაგზავნილ სეგმენტში.
10.Options And Padding - გამოიყენება რომ დავაყენოთ პარამეტრები,ვთქვათ სეგმენტის სიგრძე და ა.შ ანუ მექნიკურად რომ ვმართოთ სეგმენტის სიგრძე და შიდა პარამერები.