Disposable and Finalizers
ჩვენი api შეიცავს ორი ტიპის რესურსს,managed and unmanaged რესურსებს. რომ განვასხვაოთ managed რესურსები არის ძირიტადად ცვლადები რომელთა 
წაშლა ხდება garbage collector -ს საშუალებით,მაგრამ unmanaged რესურსებს GC ვერ შლის. Disposable მეთოდი გამოიყენება დეველოპერების მხრიდან manually
რომ ვაკონტროლოთ რისი წაშლა გვჭირდება. ის ძირითადად პასუხისმგებელია unmanaged რესურსებზე მაგრამ ასევე შეუძლია წაშალოს managed resources.
პრაქტიკაში რომ განვიხილოთ უფრო მეტად გამოიყენება Dispose მეთოდი, რაგდან ის ორივე ტიპის რესურსებს ასუფთავებს, მართალია unmanaged -ს უფრო,თუმცა 
ასეთ დროს დამზღვევად ჰყავს GC რომელიც როგორც უკვე ვთქვით managed resorces ასუფთავებს, მაგრამ იმ შმეთხვევაში თუ მოსალოდნელია რომ დაგვწირდება 
unamanged რესურსების წაშლა უნდა გამოვიყერნოთ finalize,რადგან GC რაღაც კონკრეტული პერიოდების ინტერვალით ასუფთავებს managed resources, ხოლო
finalize დეველოერის იარაღი რომ მექანიკურად წაშალოს unmanaged resources.მართალია dispose მეთოდს შეუძლია ორივე ტიპის რესურსის გასუფთავება მაგრამ
finalize გამოიყენება როგორ დამზღვევი, პრევენციის საშუალება რომ როდესაც GC მოვა managed resources წასაშლელად,unmanaged რესურსები წაშლილი დახვდება.
ანუ როგორც მივხვდით finalize არის GC ს მეთოდი.
